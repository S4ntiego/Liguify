
--Varus 3 items frequency
SELECT fr.three_items, COUNT(fr.three_items) as frequency, AVG(fr.placement) as average_placement FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as three_items, champion_api_name, placement FROM match_participant INNER JOIN match_participant_champion_item USING(match_id, puuid) INNER JOIN items USING (item_id) GROUP BY champion_api_name, placement, match_id, puuid HAVING champion_api_name='Varus' AND COUNT(item_name)=3) as fr GROUP BY fr.three_items ORDER BY COUNT(fr.three_items) DESC;

--Varus 3 items win frequency
SELECT fr.three_items, COUNT(fr.three_items) FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as three_items, champion_api_name, placement FROM match_participant INNER JOIN match_participant_champion_item USING(match_id, puuid) INNER JOIN items USING (item_id) GROUP BY champion_api_name, placement, match_id, puuid HAVING champion_api_name='Varus' AND COUNT(item_name)=3 AND placement=1) as fr GROUP BY fr.three_items ORDER BY COUNT(fr.three_items) DESC;

--Varus items frequency
SELECT COUNT(ic.frequency) FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as frequency FROM match_participant_champion_item INNER JOIN items USING(item_id) GROUP BY champion_api_name, match_id, puuid HAVING champion_api_name='Varus') as ic;

--Varus combined
SELECT fr2.three_items, fr2.frequency, ROUND(fr2.average_placement, 2) as average_placement, ROUND((wfr.winfrequency/fr2.frequency::decimal)*100, 2) as win_ratio, ROUND((fr2.frequency::decimal/(SELECT COUNT(ic.frequency) FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as frequency FROM match_participant_champion_item INNER JOIN items USING(item_id) GROUP BY champion_api_name, match_id, puuid HAVING champion_api_name='Varus') as ic))*100, 2) as percentage_frequency FROM (SELECT fr.three_items, COUNT(fr.three_items) as frequency, AVG(fr.placement) as average_placement FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as three_items, champion_api_name, placement FROM match_participant INNER JOIN match_participant_champion_item USING(match_id, puuid) INNER JOIN items USING (item_id) GROUP BY champion_api_name, placement, match_id, puuid HAVING champion_api_name='Varus' AND COUNT(item_name)=3) as fr GROUP BY fr.three_items ORDER BY COUNT(fr.three_items) DESC) as fr2 JOIN (SELECT fr.three_items, COUNT(fr.three_items) as winfrequency FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as three_items, champion_api_name, placement FROM match_participant INNER JOIN match_participant_champion_item USING(match_id, puuid) INNER JOIN items USING (item_id) GROUP BY champion_api_name, placement, match_id, puuid HAVING champion_api_name='Varus' AND COUNT(item_name)=3 AND placement=1) as fr GROUP BY fr.three_items) as wfr USING(three_items);

--Varus combined v2
SELECT fr2.three_items, fr2.frequency, ROUND(fr2.average_placement, 2) as average_placement, ROUND((wfr.winfrequency/fr2.frequency::decimal)*100, 2) as win_ratio, ROUND((fr2.frequency::decimal/(SELECT COUNT(ic.frequency) FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as frequency FROM match_participant_champion_item INNER JOIN items USING(item_id) GROUP BY champion_api_name, match_id, puuid HAVING champion_api_name='Varus') as ic))*100, 2) as percentage_frequency FROM (SELECT fr.three_items, COUNT(fr.three_items) as frequency, AVG(fr.placement) as average_placement FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as three_items, champion_api_name, placement FROM match_participant INNER JOIN match_participant_champion_item USING(match_id, puuid) INNER JOIN items USING (item_id) GROUP BY champion_api_name, placement, match_id, puuid HAVING champion_api_name='Varus' AND COUNT(item_name)=3) as fr GROUP BY fr.three_items ORDER BY COUNT(fr.three_items) DESC) as fr2 JOIN (SELECT fr.three_items, COUNT(fr.three_items) as winfrequency FROM (SELECT ARRAY_AGG(item_name ORDER BY item_name) as three_items, champion_api_name, placement FROM match_participant INNER JOIN match_participant_champion_item USING(match_id, puuid) INNER JOIN items USING (item_id) GROUP BY champion_api_name, placement, match_id, puuid HAVING champion_api_name='Varus' AND COUNT(item_name)=3 AND placement=1) as fr GROUP BY fr.three_items) as wfr USING(three_items) WHERE fr2.frequency > 5 ORDER BY fr2.frequency DESC;